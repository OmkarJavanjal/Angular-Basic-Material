import { Injectable } from '@angular/core';
import { environment } from './../../../environments/environment';
import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { PriceItem } from './priceband.model';

@Injectable()
export class PricebandService {
  private _priceUrl = 'PriceBands/';

  constructor(private _http: HttpClient) { }

getPrice(productCode: any): Observable<PriceItem[]> {
  return  this._http.get<PriceItem[]>(environment.apiUrl + this._priceUrl + productCode)
  .do(data =>  JSON.stringify(data))
  .catch (this.handleError);
}

private handleError(err: HttpErrorResponse) {
  // in a real world app, we may send the server to some remote logging infrastructure
  // instead of just logging it to the console
  let errorMessage = '';
  if (err.error instanceof Error) {
      // A client-side or network error occurred. Handle it accordingly.
      errorMessage = `An error occurred: ${err.error.message}`;
  } else {
      // The backend returned an unsuccessful response code.
      // The response body may contain clues as to what went wrong,
      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;
  }
  console.error(errorMessage);
  return Observable.throw(errorMessage);
}




}


